# Generated by Django 3.0.6 on 2020-08-01 13:11

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_at', models.CharField(default=django.utils.timezone.now, max_length=35)),
                ('updated_at', models.CharField(blank=True, max_length=35, null=True)),
                ('photo', models.ImageField(blank=True, upload_to='comment_photos')),
                ('evaluation', models.CharField(blank=True, choices=[('이행', 'implemented'), ('미흡', 'inadequate'), ('불이행', 'failure')], max_length=35)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CommentToComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_at', models.CharField(default=django.utils.timezone.now, max_length=36)),
                ('updated_at', models.CharField(blank=True, max_length=35, null=True)),
                ('photo', models.ImageField(blank=True, upload_to='comment_photos')),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ctc', to='feedpage.Comment')),
            ],
        ),
        migrations.CreateModel(
            name='Law',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bill_name', models.CharField(blank=True, max_length=100)),
                ('propose_dt', models.CharField(blank=True, max_length=10)),
                ('committee', models.CharField(blank=True, max_length=20)),
                ('detail_link', models.URLField(blank=True)),
                ('member_link', models.URLField(blank=True)),
                ('proposer_etc', models.CharField(blank=True, max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='NormalFeed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(choices=[('1', '개요'), ('2', '경력'), ('3', '과거 공약/이행률'), ('4', '발의 법률안'), ('5', '찬성/반대 법안'), ('6', '발언 및 논란')], max_length=256)),
                ('content', models.TextField()),
                ('photo', models.ImageField(blank=True, upload_to='feed_photos')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OrientationVote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Politician',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hg_name', models.CharField(blank=True, max_length=10)),
                ('eng_name', models.CharField(blank=True, max_length=10)),
                ('bth_name', models.CharField(blank=True, max_length=5)),
                ('bth_date', models.CharField(blank=True, max_length=10)),
                ('job_res_name', models.CharField(blank=True, max_length=10)),
                ('politicalParty', models.CharField(blank=True, choices=[('더불어민주당', '더불어민주당'), ('미래통합당', '미래통합당'), ('정의당', '정의당'), ('국민의당', '국민의당'), ('열린민주당', '열린민주당'), ('기본소득당', '기본소득당'), ('시대전환', '시대전환'), ('무소속', '무소속')], max_length=10)),
                ('politicalCommittee', models.CharField(blank=True, max_length=20, null=True)),
                ('district', models.CharField(blank=True, max_length=30)),
                ('gender', models.CharField(choices=[('남', '남자'), ('여', '여자')], max_length=2)),
                ('electedCount', models.CharField(blank=True, choices=[('초선', '초선'), ('재선', '재선'), ('3선', '3선'), ('4선', '4선'), ('5선', '5선'), ('6선', '6선'), ('7선', '7선'), ('8선', '8선'), ('9선', '9선'), ('10선', '10선')], max_length=10)),
                ('units', models.CharField(blank=True, max_length=20, null=True)),
                ('tel_num', models.CharField(blank=True, max_length=10, null=True)),
                ('e_mail', models.CharField(blank=True, max_length=10, null=True)),
                ('homepage', models.URLField(blank=True, max_length=20, null=True)),
                ('photo', models.ImageField(blank=True, upload_to='')),
                ('age', models.IntegerField(blank=True, default=0)),
                ('politicalOrientation', models.IntegerField(blank=True, default=0)),
            ],
        ),
        migrations.CreateModel(
            name='ReferenceFeed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('referenceUrl', models.URLField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SmallFeed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=256)),
                ('content', models.TextField()),
                ('photo', models.ImageField(blank=True, upload_to='smallfeed_photos')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('author', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserLikeSmallFeed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('smallFeed', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feedpage.SmallFeed')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserLikeReference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('reference', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feedpage.ReferenceFeed')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserLikePolitican',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('politican', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feedpage.Politician')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserLikeNormalFeed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('normalFeed', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feedpage.NormalFeed')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserLikeLaw',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('law', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feedpage.Law')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserLikeCTC',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('ctc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feedpage.CommentToComment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserLikeComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feedpage.Comment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserDislikeSmallFeed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('smallFeed', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feedpage.SmallFeed')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserDislikeReference',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('reference', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feedpage.ReferenceFeed')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserDislikePolitican',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('politican', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feedpage.Politician')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserDislikeNormalFeed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('normalFeed', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feedpage.NormalFeed')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserDislikeLaw',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('law', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feedpage.Law')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserDislikeCTC',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('ctc', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feedpage.CommentToComment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserDislikeComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feedpage.Comment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='smallfeed',
            name='dislike_users',
            field=models.ManyToManyField(blank=True, related_name='dislike_smallFeed', through='feedpage.UserDislikeSmallFeed', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='smallfeed',
            name='like_users',
            field=models.ManyToManyField(blank=True, related_name='like_smallFeed', through='feedpage.UserLikeSmallFeed', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='smallfeed',
            name='normalFeed',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='smallFeeds', to='feedpage.NormalFeed'),
        ),
        migrations.AddField(
            model_name='referencefeed',
            name='dislike_users',
            field=models.ManyToManyField(blank=True, related_name='dislike_reference', through='feedpage.UserDislikeReference', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='referencefeed',
            name='like_users',
            field=models.ManyToManyField(blank=True, related_name='like_reference', through='feedpage.UserLikeReference', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='politician',
            name='dislike_users',
            field=models.ManyToManyField(blank=True, related_name='dislike_politican', through='feedpage.UserDislikePolitican', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='politician',
            name='like_users',
            field=models.ManyToManyField(blank=True, related_name='like_politican', through='feedpage.UserLikePolitican', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='politician',
            name='orientation_vote_users',
            field=models.ManyToManyField(blank=True, related_name='orientation_vote_politican', through='feedpage.OrientationVote', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='PoliticanDisagreeLaw',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('law', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feedpage.Law')),
                ('politican', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feedpage.Politician')),
            ],
        ),
        migrations.CreateModel(
            name='PoliticanAgreeLaw',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('law', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feedpage.Law')),
                ('politican', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feedpage.Politician')),
            ],
        ),
        migrations.CreateModel(
            name='PoliticanAbstainLaw',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('law', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feedpage.Law')),
                ('politican', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feedpage.Politician')),
            ],
        ),
        migrations.AddField(
            model_name='orientationvote',
            name='politician',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feedpage.Politician'),
        ),
        migrations.AddField(
            model_name='orientationvote',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='normalfeed',
            name='dislike_users',
            field=models.ManyToManyField(blank=True, related_name='dislike_normalFeed', through='feedpage.UserDislikeNormalFeed', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='normalfeed',
            name='like_users',
            field=models.ManyToManyField(blank=True, related_name='like_normalFeed', through='feedpage.UserLikeNormalFeed', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='normalfeed',
            name='politician',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='normalFeeds', to='feedpage.Politician'),
        ),
        migrations.AddField(
            model_name='law',
            name='abstain_politican',
            field=models.ManyToManyField(blank=True, related_name='abstain_law', through='feedpage.PoliticanAbstainLaw', to='feedpage.Politician'),
        ),
        migrations.AddField(
            model_name='law',
            name='agree_politican',
            field=models.ManyToManyField(blank=True, related_name='agree_law', through='feedpage.PoliticanAgreeLaw', to='feedpage.Politician'),
        ),
        migrations.AddField(
            model_name='law',
            name='disagree_politican',
            field=models.ManyToManyField(blank=True, related_name='disagree_law', through='feedpage.PoliticanDisagreeLaw', to='feedpage.Politician'),
        ),
        migrations.AddField(
            model_name='law',
            name='dislike_users',
            field=models.ManyToManyField(blank=True, related_name='dislike_law', through='feedpage.UserDislikeLaw', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='law',
            name='like_users',
            field=models.ManyToManyField(blank=True, related_name='like_law', through='feedpage.UserLikeLaw', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='law',
            name='proposer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='feedpage.Politician'),
        ),
        migrations.AddField(
            model_name='commenttocomment',
            name='dislike_users',
            field=models.ManyToManyField(blank=True, related_name='dislike_CTC', through='feedpage.UserDislikeCTC', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='commenttocomment',
            name='like_users',
            field=models.ManyToManyField(blank=True, related_name='like_CTC', through='feedpage.UserLikeCTC', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='comment',
            name='dislike_users',
            field=models.ManyToManyField(blank=True, related_name='dislike_comment', through='feedpage.UserDislikeComment', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='comment',
            name='law',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='feedpage.Law'),
        ),
        migrations.AddField(
            model_name='comment',
            name='like_users',
            field=models.ManyToManyField(blank=True, related_name='like_comment', through='feedpage.UserLikeComment', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='comment',
            name='normalFeed',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='feedpage.NormalFeed'),
        ),
        migrations.AddField(
            model_name='comment',
            name='politician',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='feedpage.Politician'),
        ),
        migrations.AddField(
            model_name='comment',
            name='smallFeed',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='feedpage.SmallFeed'),
        ),
    ]
