# Generated by Django 3.0.8 on 2020-07-22 13:44

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_at', models.CharField(max_length=10)),
                ('evaluation', models.CharField(choices=[('이행', 'implemented'), ('미흡', 'inadequate'), ('불이행', 'failure')], max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name='Law',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10)),
                ('content', models.TextField()),
                ('created_at', models.CharField(max_length=10)),
                ('link', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='OrientationVote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='PoliticanAbstainLaw',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('law', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feedpage.Law')),
            ],
        ),
        migrations.CreateModel(
            name='PoliticanDislikeLaw',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('law', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feedpage.Law')),
            ],
        ),
        migrations.CreateModel(
            name='PoliticanLikeLaw',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('law', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feedpage.Law')),
            ],
        ),
        migrations.CreateModel(
            name='PoliticanProposeLaw',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('law', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feedpage.Law')),
            ],
        ),
        migrations.CreateModel(
            name='Politician',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10)),
                ('age', models.IntegerField()),
                ('gender', models.CharField(choices=[('남', 'man'), ('여', 'woman')], max_length=1)),
                ('district', models.CharField(max_length=10)),
                ('politicalParty', models.CharField(max_length=20)),
                ('politicalCommittee', models.CharField(max_length=20)),
                ('politicalOrientation', models.IntegerField()),
                ('electedCount', models.IntegerField()),
                ('abstain_law', models.ManyToManyField(blank=True, related_name='abstain_politican', through='feedpage.PoliticanAbstainLaw', to='feedpage.Law')),
                ('dislike_law', models.ManyToManyField(blank=True, related_name='dislike_politican', through='feedpage.PoliticanDislikeLaw', to='feedpage.Law')),
            ],
        ),
        migrations.CreateModel(
            name='UserLikePolitican',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('politican', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feedpage.Politician')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserLikeLaw',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('law', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feedpage.Law')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserDislikePolitican',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('politican', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feedpage.Politician')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserDislikeLaw',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('law', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feedpage.Law')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserCommentLaw',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('law', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feedpage.Law')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='politician',
            name='dislike_users',
            field=models.ManyToManyField(blank=True, related_name='dislike_politican', through='feedpage.UserDislikePolitican', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='politician',
            name='like_law',
            field=models.ManyToManyField(blank=True, related_name='like_politican', through='feedpage.PoliticanLikeLaw', to='feedpage.Law'),
        ),
        migrations.AddField(
            model_name='politician',
            name='like_users',
            field=models.ManyToManyField(blank=True, related_name='like_politican', through='feedpage.UserLikePolitican', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='politician',
            name='orientation_vote_users',
            field=models.ManyToManyField(blank=True, related_name='orientation_vote_politican', through='feedpage.OrientationVote', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='politician',
            name='propose_law',
            field=models.ManyToManyField(blank=True, related_name='propose_politican', through='feedpage.PoliticanProposeLaw', to='feedpage.Law'),
        ),
        migrations.AddField(
            model_name='politicanproposelaw',
            name='politican',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feedpage.Politician'),
        ),
        migrations.AddField(
            model_name='politicanlikelaw',
            name='politican',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feedpage.Politician'),
        ),
        migrations.AddField(
            model_name='politicandislikelaw',
            name='politican',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feedpage.Politician'),
        ),
        migrations.AddField(
            model_name='politicanabstainlaw',
            name='politican',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feedpage.Politician'),
        ),
        migrations.AddField(
            model_name='orientationvote',
            name='politican',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feedpage.Politician'),
        ),
        migrations.AddField(
            model_name='orientationvote',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='law',
            name='comment_users',
            field=models.ManyToManyField(blank=True, related_name='comment_law', through='feedpage.UserCommentLaw', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='law',
            name='dislike_users',
            field=models.ManyToManyField(blank=True, related_name='dislike_law', through='feedpage.UserDislikeLaw', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='law',
            name='like_users',
            field=models.ManyToManyField(blank=True, related_name='like_law', through='feedpage.UserLikeLaw', to=settings.AUTH_USER_MODEL),
        ),
    ]
